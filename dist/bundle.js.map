{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,kBCA3E,MAAMI,EAAiBC,IAC1BC,MAAMD,EAAME,QAAO,ECCVC,EAAsBC,IAG/B,IAAIC,EAAM,8DAQNC,EAAW,qCAYf,OAAQF,GAGJ,IAAK,cACD,OAAO,SAASG,EAAOC,GACnB,MAAMC,EAAc,IAAIC,QAAQ,CAC5BC,cAAe,UAAUC,aAAaC,QAAQ,aAGlD,OADAL,GAAU,GACHM,MAAMT,EAAK,CACdU,OAAQ,MACRC,QAASP,IAERQ,MAAMC,IACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OACb,MAAwB,MAApBF,EAASC,OACV,IAAIE,MAAM,OAEV,IAAIA,MAAM,MACpB,IAEHJ,MAAMK,IAEI,CAAEC,SADQD,EAAKC,aAGzBC,OAAOxB,IACJ,GAAsB,QAAlBA,EAAME,QACN,OAAOK,EAAOC,GAEdT,EAAcC,EAClB,IAEHyB,SAAQ,IAAMjB,GAAU,IACjC,EAIJ,IAAK,aACD,OAAO,SAASkB,EAAOC,EAAMnB,GACzB,MAAMC,EAAc,IAAIC,QAAQ,CAC5BC,cAAe,UAAUC,aAAaC,QAAQ,aAGlD,OADAL,GAAU,GACHM,MAAMT,EAAK,CACdU,OAAQ,OACRC,QAASP,EACTkB,SAECV,MAAMC,IACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OACb,MAAwB,MAApBF,EAASC,OACV,IAAIE,MAAM,OAEV,IAAIA,MACN,+CAER,IAEHJ,MAAMC,IACI,CAAEA,eAEZM,OAAOxB,GACkB,QAAlBA,EAAME,QACCwB,EAAOC,EAAMnB,IAEpBA,GAAU,GACVT,EAAcC,GACP,CAAEA,WAGzB,EAGJ,IAAK,aACD,OAAO,SAAU4B,EAAIpB,GACjB,MAAMC,EAAc,IAAIC,QAAQ,CAC5BC,cAAe,UAAUC,aAAaC,QAAQ,aAIlD,OAFAL,GAAU,GAEHM,MAAMT,EAAM,IAAIuB,gBAAkB,CACrCb,OAAQ,OACRC,QAASP,IAERQ,MAAMC,IACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OACb,MAAwB,MAApBF,EAASC,OACV,IAAIE,MAAM,OAEV,IAAIA,MAAM,MACpB,IAEHJ,MAAMC,IACI,CAAEA,eAEZM,OAAOxB,IACJQ,GAAU,GACVT,EAAcC,EAAK,GAE/B,EAIJ,IAAK,WACD,MAAO,IACIc,MAAMR,GACRW,MAAMC,GACIA,EAASE,SAEnBH,MAAMK,IACHO,QAAQC,IAAIR,EAAI,IAMhC,IAAK,WACD,OAAQK,GACGb,MAAMR,EAAU,CACnBS,OAAQ,OACRY,SAECV,MAAMC,IACH,GAAwB,MAApBA,EAASC,OACT,MAAM,IAAIE,MACN,+CAGR,OAAOH,EAASE,MAAK,IAExBH,MAAMK,GACIA,IAEVE,OAAOxB,IACJD,EAAcC,GACP,WAMvB,IAAK,YACD,OAAQ2B,GACGb,MAAMR,EAAW,SAAU,CAC9BS,OAAQ,OACRY,SAECV,MAAMC,IACH,GAAwB,MAApBA,EAASC,OACT,MAAM,IAAIE,MAAM,kCAEpB,OAAOH,EAASE,MAAK,IAExBH,MAAMK,GACIA,EAAKS,OAEfP,OAAOxB,IACJD,EAAcC,GACP,WAO3B,ECjMEgC,EAAuB,CAC3BC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,eACLC,MAAO,yBAGTS,OAAQ,CACNV,IAAK,SACLC,MAAO,mBAGTU,aAAc,CACZX,IAAK,gBACLC,MAAO,0BAGTW,QAAS,CACPZ,IAAK,UACLC,MAAO,oBAGTY,YAAa,CACXb,IAAK,eACLC,MAAO,yBAGTa,OAAQ,CACNd,IAAK,SACLC,MAAO,mBAGTc,WAAY,CACVf,IAAK,cACLC,MAAO,wBAGTe,aAAc,CACZhB,IAAK,gBACLC,MAAO,2BC3EJ,SAASgB,EAAkBC,GAChC,MAAO,CAACC,EAAU,CAAC,KAEjB,MAAMC,EAAQD,EAAQC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE3D,OADeJ,EAAKK,QAAQH,IAAUF,EAAKK,QAAQL,EAAKI,aAC3C,CAEjB,CCLA,MAqBaE,EAAa,CACxBC,KAAMR,EAAkB,CACtBM,QAvBgB,CAClBG,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAoBLP,aAAc,SAGhBQ,KAAMb,EAAkB,CACtBM,QArBgB,CAClBG,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAkBLP,aAAc,SAGhBS,SAAUd,EAAkB,CAC1BM,QAnBoB,CACtBG,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLP,aAAc,UCpCZU,EAAuB,CAC3BC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACVpC,MAAO,KCmCF,SAASqC,EAAgBpB,GAC9B,MAAO,CAACqB,EAAOpB,KAGb,IAAIqB,EACJ,GAAgB,gBAHArB,GAASsB,QAAUpB,OAAOF,EAAQsB,SAAW,eAG7BvB,EAAKwB,iBAAkB,CACrD,MAAMpB,EAAeJ,EAAKyB,wBAA0BzB,EAAKI,aACnDF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASE,EAEvDkB,EACEtB,EAAKwB,iBAAiBtB,IAAUF,EAAKwB,iBAAiBpB,EAC1D,KAAO,CACL,MAAMA,EAAeJ,EAAKI,aACpBF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE5DkB,EAActB,EAAK0B,OAAOxB,IAAUF,EAAK0B,OAAOtB,EAClD,CAIA,OAAOkB,EAHOtB,EAAK2B,iBAAmB3B,EAAK2B,iBAAiBN,GAASA,EAG5C,CAE7B,CC/DO,SAASO,EAAa5B,GAC3B,MAAO,CAAC6B,EAAQ5B,EAAU,CAAC,KACzB,MAAMC,EAAQD,EAAQC,MAEhB4B,EACH5B,GAASF,EAAK+B,cAAc7B,IAC7BF,EAAK+B,cAAc/B,EAAKgC,mBACpBC,EAAcJ,EAAOK,MAAMJ,GAEjC,IAAKG,EACH,OAAO,KAET,MAAME,EAAgBF,EAAY,GAE5BG,EACHlC,GAASF,EAAKoC,cAAclC,IAC7BF,EAAKoC,cAAcpC,EAAKqC,mBAEpBrG,EAAMsG,MAAMC,QAAQH,GA+B9B,SAAmBI,EAAOC,GACxB,IAAK,IAAIzG,EAAM,EAAGA,EAAMwG,EAAME,OAAQ1G,IACpC,GAAcwG,EAAMxG,GAhC8B2G,KAAKR,GAiCrD,OAAOnG,CAIb,CArCQ4G,CAAUR,GAkBlB,SAAiBS,EAAQJ,GACvB,IAAK,MAAMzG,KAAO6G,EAChB,GACE3G,OAAOM,UAAUC,eAAeC,KAAKmG,EAAQ7G,IACnC6G,EAAO7G,GApB6B2G,KAAKR,GAsBnD,OAAOnG,CAIb,CA1BQ8G,CAAQV,GAEZ,IAAIf,EAUJ,OARAA,EAAQrB,EAAK+C,cAAgB/C,EAAK+C,cAAc/G,GAAOA,EACvDqF,EAAQpB,EAAQ8C,cAEZ9C,EAAQ8C,cAAc1B,GACtBA,EAIG,CAAEA,QAAO2B,KAFHnB,EAAOoB,MAAMd,EAAcO,QAElB,CAE1B,CCnCO,IAA6B1C,ECc7B,MAAMkD,EAAO,CAClBC,KAAM,QACNC,eP+D4B,CAACC,EAAOC,EAAOrD,KAC3C,IAAIsD,EAEJ,MAAMC,EAAa5E,EAAqByE,GASxC,OAPEE,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAW1E,IAEX0E,EAAWzE,MAAM0E,QAAQ,YAAaH,EAAMI,YAGnDzD,GAAS0D,UACP1D,EAAQ2D,YAAc3D,EAAQ2D,WAAa,EACtC,MAAQL,EAERA,EAAS,OAIbA,CAAM,EOlFbjD,WAAYA,EACZuD,eJT4B,CAACR,EAAOS,EAAOC,EAAWC,IACtDlD,EAAqBuC,GISrBY,SCyIsB,CACtBC,cAzBoB,CAACC,EAAaH,KAClC,MAAMI,EAASC,OAAOF,GAShBG,EAASF,EAAS,IACxB,GAAIE,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOF,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,IAAI,EAMpBG,IAAKnD,EAAgB,CACnBM,OA9Jc,CAChB8C,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBA4JtBtE,aAAc,SAGhBuE,QAASvD,EAAgB,CACvBM,OA7JkB,CACpB8C,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBA2JlDtE,aAAc,OACduB,iBAAmBgD,GAAYA,EAAU,IAG3CC,MAAOxD,EAAgB,CACrBM,OAzJgB,CAClB8C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6HAtE,aAAc,SAGhByE,IAAKzD,EAAgB,CACnBM,OA7Hc,CAChB8C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvC7D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5C8D,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAmHAtE,aAAc,SAGhB0E,UAAW1D,EAAgB,CACzBM,OAnHoB,CACtB8C,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAuFPlF,aAAc,OACdoB,iBApF8B,CAChCgD,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aAwDP7D,uBAAwB,UDpK1BS,MEqEmB,CACnBgC,eH1FkClE,EG0FC,CACjC8B,aAxF8B,wBAyF9ByD,aAxF8B,OAyF9BxC,cAAgB1B,GAAUmE,SAASnE,EAAO,KH5FrC,CAACQ,EAAQ5B,EAAU,CAAC,KACzB,MAAMgC,EAAcJ,EAAOK,MAAMlC,EAAK8B,cACtC,IAAKG,EAAa,OAAO,KACzB,MAAME,EAAgBF,EAAY,GAE5BwD,EAAc5D,EAAOK,MAAMlC,EAAKuF,cACtC,IAAKE,EAAa,OAAO,KACzB,IAAIpE,EAAQrB,EAAK+C,cACb/C,EAAK+C,cAAc0C,EAAY,IAC/BA,EAAY,GAOhB,OAJApE,EAAQpB,EAAQ8C,cAAgB9C,EAAQ8C,cAAc1B,GAASA,EAIxD,CAAEA,QAAO2B,KAFHnB,EAAOoB,MAAMd,EAAcO,QAElB,GG+ExB6B,IAAK3C,EAAa,CAChBG,cA3FqB,CACvByC,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DAyFJ1C,kBAAmB,OACnBI,cAxFqB,CACvBsD,IAAK,CAAC,MAAO,YAwFXrD,kBAAmB,QAGrBsC,QAAS/C,EAAa,CACpBG,cAzFyB,CAC3ByC,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAuFJ1C,kBAAmB,OACnBI,cAtFyB,CAC3BsD,IAAK,CAAC,KAAM,KAAM,KAAM,OAsFtBrD,kBAAmB,MACnBU,cAAgB4C,GAAUA,EAAQ,IAGpCf,MAAOhD,EAAa,CAClBG,cAxFuB,CACzByC,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAsFJ1C,kBAAmB,OACnBI,cArFuB,CACzBoC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFkB,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,QA0DArD,kBAAmB,QAGrBwC,IAAKjD,EAAa,CAChBG,cA1DqB,CACvByC,OAAQ,YACR7D,MAAO,2BACP8D,YAAa,kCACbC,KAAM,gEAuDJ1C,kBAAmB,OACnBI,cAtDqB,CACvBoC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDkB,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAqDjDrD,kBAAmB,QAGrByC,UAAWlD,EAAa,CACtBG,cAtD2B,CAC7ByC,OAAQ,6DACRkB,IAAK,kFAqDH1D,kBAAmB,MACnBI,cApD2B,CAC7BsD,IAAK,CACHX,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA4CPjD,kBAAmB,SF5GrBpC,QAAS,CACP2F,aAAc,EACdC,sBAAuB,IGvB3B,IAAIC,EAAiB,CAAC,EAEf,SAASC,IACd,OAAOD,CACT,CCiDuBE,KAAKC,IAAI,GAAI,GA/B7B,MAsDMC,EAAqB,OAOrBC,EAAoB,MCnD1B,SAASC,EAAOC,GACrB,MAAMC,EAASpK,OAAOM,UAAUkH,SAAShH,KAAK2J,GAG9C,OACEA,aAAoBE,MACC,iBAAbF,GAAoC,kBAAXC,EAG1B,IAAID,EAASG,aAAaH,GAEb,iBAAbA,GACI,oBAAXC,GACoB,iBAAbD,GACI,oBAAXC,EAGO,IAAIC,KAAKF,GAGT,IAAIE,KAAKE,IAEpB,CChCO,SAASC,EAAWnG,GACzB,MAAMuD,EAAQsC,EAAO7F,GAErB,OADAuD,EAAM6C,SAAS,EAAG,EAAG,EAAG,GACjB7C,CACT,CCbO,SAAS8C,EAAgCrG,GAC9C,MAAMuD,EAAQsC,EAAO7F,GACfsG,EAAU,IAAIN,KAClBA,KAAKO,IACHhD,EAAMiD,cACNjD,EAAMkD,WACNlD,EAAMmD,UACNnD,EAAMoD,WACNpD,EAAMqD,aACNrD,EAAMsD,aACNtD,EAAMuD,oBAIV,OADAR,EAAQS,eAAexD,EAAMiD,gBACrBxG,GAAQsG,CAClB,CCAO,SAASU,EAAchH,EAAMc,GAClC,OAAId,aAAgBgG,KACX,IAAIhG,EAAKiG,YAAYnF,GAErB,IAAIkF,KAAKlF,EAEpB,CCXO,SAASmG,EAAajH,GAC3B,MAAMuD,EAAQsC,EAAO7F,GAGrB,OCSK,SAAkCkH,EAAUC,GACjD,MAAMC,EAAiBjB,EAAWe,GAC5BG,EAAkBlB,EAAWgB,GAE7BG,GACHF,EAAiBf,EAAgCe,GAC9CG,GACHF,EAAkBhB,EAAgCgB,GAKrD,OAAO5B,KAAK+B,OAAOF,EAAgBC,GAAkB3B,EACvD,CDxBe6B,CAAyBlE,EEFjC,SAAqBvD,GAC1B,MAAM0H,EAAY7B,EAAO7F,GACnBuD,EAAQyD,EAAchH,EAAM,GAGlC,OAFAuD,EAAMoE,YAAYD,EAAUlB,cAAe,EAAG,GAC9CjD,EAAM6C,SAAS,EAAG,EAAG,EAAG,GACjB7C,CACT,CFJ+CqE,CAAYrE,IAChC,CAE3B,CGKO,SAASsE,EAAY7H,EAAMN,GAChC,MAAM6F,EAAiBC,IACjBH,EACJ3F,GAAS2F,cACT3F,GAASoI,QAAQpI,SAAS2F,cAC1BE,EAAeF,cACfE,EAAeuC,QAAQpI,SAAS2F,cAChC,EAEI9B,EAAQsC,EAAO7F,GACfsE,EAAMf,EAAMwE,SACZC,GAAQ1D,EAAMe,EAAe,EAAI,GAAKf,EAAMe,EAIlD,OAFA9B,EAAM0E,QAAQ1E,EAAMmD,UAAYsB,GAChCzE,EAAM6C,SAAS,EAAG,EAAG,EAAG,GACjB7C,CACT,CCzBO,SAAS2E,EAAelI,GAC7B,OAAO6H,EAAY7H,EAAM,CAAEqF,aAAc,GAC3C,CCAO,SAAS8C,EAAenI,GAC7B,MAAMuD,EAAQsC,EAAO7F,GACfoI,EAAO7E,EAAMiD,cAEb6B,EAA4BrB,EAAchH,EAAM,GACtDqI,EAA0BV,YAAYS,EAAO,EAAG,EAAG,GACnDC,EAA0BjC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMkC,EAAkBJ,EAAeG,GAEjCE,EAA4BvB,EAAchH,EAAM,GACtDuI,EAA0BZ,YAAYS,EAAM,EAAG,GAC/CG,EAA0BnC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMoC,EAAkBN,EAAeK,GAEvC,OAAIhF,EAAMkF,WAAaH,EAAgBG,UAC9BL,EAAO,EACL7E,EAAMkF,WAAaD,EAAgBC,UACrCL,EAEAA,EAAO,CAElB,CCrBO,SAASM,EAAW1I,GACzB,MAAMuD,EAAQsC,EAAO7F,GACfgI,GAAQE,EAAe3E,ICDxB,SAA4BvD,GACjC,MAAMoI,EAAOD,EAAenI,GACtB2I,EAAkB3B,EAAchH,EAAM,GAG5C,OAFA2I,EAAgBhB,YAAYS,EAAM,EAAG,GACrCO,EAAgBvC,SAAS,EAAG,EAAG,EAAG,GAC3B8B,EAAeS,EACxB,CDLyCC,CAAmBrF,GAK1D,OAAOkC,KAAK+B,MAAMQ,EAAOrC,GAAsB,CACjD,CEWO,SAASkD,EAAY7I,EAAMN,GAChC,MAAM6D,EAAQsC,EAAO7F,GACfoI,EAAO7E,EAAMiD,cAEbjB,EAAiBC,IACjBF,EACJ5F,GAAS4F,uBACT5F,GAASoI,QAAQpI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeuC,QAAQpI,SAAS4F,uBAChC,EAEIwD,EAAsB9B,EAAchH,EAAM,GAChD8I,EAAoBnB,YAAYS,EAAO,EAAG,EAAG9C,GAC7CwD,EAAoB1C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMkC,EAAkBT,EAAYiB,EAAqBpJ,GAEnDqJ,EAAsB/B,EAAchH,EAAM,GAChD+I,EAAoBpB,YAAYS,EAAM,EAAG9C,GACzCyD,EAAoB3C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMoC,EAAkBX,EAAYkB,EAAqBrJ,GAEzD,OAAI6D,EAAMkF,WAAaH,EAAgBG,UAC9BL,EAAO,EACL7E,EAAMkF,WAAaD,EAAgBC,UACrCL,EAEAA,EAAO,CAElB,CC5BO,SAASY,EAAQhJ,EAAMN,GAC5B,MAAM6D,EAAQsC,EAAO7F,GACfgI,GAAQH,EAAYtE,EAAO7D,ICH5B,SAAyBM,EAAMN,GACpC,MAAM6F,EAAiBC,IACjBF,EACJ5F,GAAS4F,uBACT5F,GAASoI,QAAQpI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeuC,QAAQpI,SAAS4F,uBAChC,EAEI8C,EAAOS,EAAY7I,EAAMN,GACzBuJ,EAAYjC,EAAchH,EAAM,GAItC,OAHAiJ,EAAUtB,YAAYS,EAAM,EAAG9C,GAC/B2D,EAAU7C,SAAS,EAAG,EAAG,EAAG,GACdyB,EAAYoB,EAAWvJ,EAEvC,CDZ+CwJ,CAAgB3F,EAAO7D,GAKpE,OAAO+F,KAAK+B,MAAMQ,EAAOrC,GAAsB,CACjD,CEtDO,SAASwD,EAAgBtF,EAAQuF,GAGtC,OAFavF,EAAS,EAAI,IAAM,IACjB4B,KAAK4D,IAAIxF,GAAQV,WAAWmG,SAASF,EAAc,IAEpE,CCWO,MAAMG,EAAkB,CAE7B,CAAAC,CAAExJ,EAAM8C,GAUN,MAAM2G,EAAazJ,EAAKwG,cAElB4B,EAAOqB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAON,EAA0B,OAAVrG,EAAiBsF,EAAO,IAAMA,EAAMtF,EAAMX,OACnE,EAGA,CAAAuH,CAAE1J,EAAM8C,GACN,MAAMuB,EAAQrE,EAAKyG,WACnB,MAAiB,MAAV3D,EAAgBlD,OAAOyE,EAAQ,GAAK8E,EAAgB9E,EAAQ,EAAG,EACxE,EAGAsF,EAAC,CAAC3J,EAAM8C,IACCqG,EAAgBnJ,EAAK0G,UAAW5D,EAAMX,QAI/C,CAAAyH,CAAE5J,EAAM8C,GACN,MAAM+G,EAAqB7J,EAAK2G,WAAa,IAAM,EAAI,KAAO,KAE9D,OAAQ7D,GACN,IAAK,IACL,IAAK,KACH,OAAO+G,EAAmBC,cAC5B,IAAK,MACH,OAAOD,EACT,IAAK,QACH,OAAOA,EAAmB,GAE5B,QACE,MAA8B,OAAvBA,EAA8B,OAAS,OAEpD,EAGAE,EAAC,CAAC/J,EAAM8C,IACCqG,EAAgBnJ,EAAK2G,WAAa,IAAM,GAAI7D,EAAMX,QAI3D6H,EAAC,CAAChK,EAAM8C,IACCqG,EAAgBnJ,EAAK2G,WAAY7D,EAAMX,QAIhD8H,EAAC,CAACjK,EAAM8C,IACCqG,EAAgBnJ,EAAK4G,aAAc9D,EAAMX,QAIlD+H,EAAC,CAAClK,EAAM8C,IACCqG,EAAgBnJ,EAAK6G,aAAc/D,EAAMX,QAIlD,CAAAgI,CAAEnK,EAAM8C,GACN,MAAMsH,EAAiBtH,EAAMX,OACvBkI,EAAerK,EAAK8G,kBAI1B,OAAOqC,EAHmB1D,KAAK6E,MAC7BD,EAAe5E,KAAKC,IAAI,GAAI0E,EAAiB,IAELtH,EAAMX,OAClD,GCzBWoI,EAAa,CAExBC,EAAG,SAAUxK,EAAM8C,EAAOY,GACxB,MAAMM,EAAMhE,EAAKwG,cAAgB,EAAI,EAAI,EACzC,OAAQ1D,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOY,EAASM,IAAIA,EAAK,CAAErE,MAAO,gBAEpC,IAAK,QACH,OAAO+D,EAASM,IAAIA,EAAK,CAAErE,MAAO,WAGpC,QACE,OAAO+D,EAASM,IAAIA,EAAK,CAAErE,MAAO,SAExC,EAGA6J,EAAG,SAAUxJ,EAAM8C,EAAOY,GAExB,GAAc,OAAVZ,EAAgB,CAClB,MAAM2G,EAAazJ,EAAKwG,cAElB4B,EAAOqB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAO/F,EAASC,cAAcyE,EAAM,CAAEqC,KAAM,QAC9C,CAEA,OAAOlB,EAAgBC,EAAExJ,EAAM8C,EACjC,EAGA4H,EAAG,SAAU1K,EAAM8C,EAAOY,EAAUhE,GAClC,MAAMiL,EAAiB9B,EAAY7I,EAAMN,GAEnCkL,EAAWD,EAAiB,EAAIA,EAAiB,EAAIA,EAG3D,MAAc,OAAV7H,EAEKqG,EADcyB,EAAW,IACK,GAIzB,OAAV9H,EACKY,EAASC,cAAciH,EAAU,CAAEH,KAAM,SAI3CtB,EAAgByB,EAAU9H,EAAMX,OACzC,EAGA0I,EAAG,SAAU7K,EAAM8C,GAIjB,OAAOqG,EAHahB,EAAenI,GAGC8C,EAAMX,OAC5C,EAWA2I,EAAG,SAAU9K,EAAM8C,GAEjB,OAAOqG,EADMnJ,EAAKwG,cACW1D,EAAMX,OACrC,EAGA4I,EAAG,SAAU/K,EAAM8C,EAAOY,GACxB,MAAMU,EAAUqB,KAAKuF,MAAMhL,EAAKyG,WAAa,GAAK,GAClD,OAAQ3D,GAEN,IAAK,IACH,OAAOlD,OAAOwE,GAEhB,IAAK,KACH,OAAO+E,EAAgB/E,EAAS,GAElC,IAAK,KACH,OAAOV,EAASC,cAAcS,EAAS,CAAEqG,KAAM,YAEjD,IAAK,MACH,OAAO/G,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,SACPqB,QAAS,eAIb,QACE,OAAO0C,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,OACPqB,QAAS,eAGjB,EAGAiK,EAAG,SAAUjL,EAAM8C,EAAOY,GACxB,MAAMU,EAAUqB,KAAKuF,MAAMhL,EAAKyG,WAAa,GAAK,GAClD,OAAQ3D,GAEN,IAAK,IACH,OAAOlD,OAAOwE,GAEhB,IAAK,KACH,OAAO+E,EAAgB/E,EAAS,GAElC,IAAK,KACH,OAAOV,EAASC,cAAcS,EAAS,CAAEqG,KAAM,YAEjD,IAAK,MACH,OAAO/G,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,SACPqB,QAAS,eAIb,QACE,OAAO0C,EAASU,QAAQA,EAAS,CAC/BzE,MAAO,OACPqB,QAAS,eAGjB,EAGA0I,EAAG,SAAU1J,EAAM8C,EAAOY,GACxB,MAAMW,EAAQrE,EAAKyG,WACnB,OAAQ3D,GACN,IAAK,IACL,IAAK,KACH,OAAOyG,EAAgBG,EAAE1J,EAAM8C,GAEjC,IAAK,KACH,OAAOY,EAASC,cAAcU,EAAQ,EAAG,CAAEoG,KAAM,UAEnD,IAAK,MACH,OAAO/G,EAASW,MAAMA,EAAO,CAC3B1E,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASW,MAAMA,EAAO,CAC3B1E,MAAO,SACPqB,QAAS,eAIb,QACE,OAAO0C,EAASW,MAAMA,EAAO,CAAE1E,MAAO,OAAQqB,QAAS,eAE7D,EAGAkK,EAAG,SAAUlL,EAAM8C,EAAOY,GACxB,MAAMW,EAAQrE,EAAKyG,WACnB,OAAQ3D,GAEN,IAAK,IACH,OAAOlD,OAAOyE,EAAQ,GAExB,IAAK,KACH,OAAO8E,EAAgB9E,EAAQ,EAAG,GAEpC,IAAK,KACH,OAAOX,EAASC,cAAcU,EAAQ,EAAG,CAAEoG,KAAM,UAEnD,IAAK,MACH,OAAO/G,EAASW,MAAMA,EAAO,CAC3B1E,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASW,MAAMA,EAAO,CAC3B1E,MAAO,SACPqB,QAAS,eAIb,QACE,OAAO0C,EAASW,MAAMA,EAAO,CAAE1E,MAAO,OAAQqB,QAAS,eAE7D,EAGAmK,EAAG,SAAUnL,EAAM8C,EAAOY,EAAUhE,GAClC,MAAM0L,EAAOpC,EAAQhJ,EAAMN,GAE3B,MAAc,OAAVoD,EACKY,EAASC,cAAcyH,EAAM,CAAEX,KAAM,SAGvCtB,EAAgBiC,EAAMtI,EAAMX,OACrC,EAGAkJ,EAAG,SAAUrL,EAAM8C,EAAOY,GACxB,MAAM4H,EAAU5C,EAAW1I,GAE3B,MAAc,OAAV8C,EACKY,EAASC,cAAc2H,EAAS,CAAEb,KAAM,SAG1CtB,EAAgBmC,EAASxI,EAAMX,OACxC,EAGAwH,EAAG,SAAU3J,EAAM8C,EAAOY,GACxB,MAAc,OAAVZ,EACKY,EAASC,cAAc3D,EAAK0G,UAAW,CAAE+D,KAAM,SAGjDlB,EAAgBI,EAAE3J,EAAM8C,EACjC,EAGAyI,EAAG,SAAUvL,EAAM8C,EAAOY,GACxB,MAAM8H,EAAYvE,EAAajH,GAE/B,MAAc,OAAV8C,EACKY,EAASC,cAAc6H,EAAW,CAAEf,KAAM,cAG5CtB,EAAgBqC,EAAW1I,EAAMX,OAC1C,EAGAsJ,EAAG,SAAUzL,EAAM8C,EAAOY,GACxB,MAAMgI,EAAY1L,EAAK+H,SACvB,OAAQjF,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOY,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,SACPqB,QAAS,eAGb,IAAK,SACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,QACPqB,QAAS,eAIb,QACE,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,OACPqB,QAAS,eAGjB,EAGA2K,EAAG,SAAU3L,EAAM8C,EAAOY,EAAUhE,GAClC,MAAMgM,EAAY1L,EAAK+H,SACjB6D,GAAkBF,EAAYhM,EAAQ2F,aAAe,GAAK,GAAK,EACrE,OAAQvC,GAEN,IAAK,IACH,OAAOlD,OAAOgM,GAEhB,IAAK,KACH,OAAOzC,EAAgByC,EAAgB,GAEzC,IAAK,KACH,OAAOlI,EAASC,cAAciI,EAAgB,CAAEnB,KAAM,QACxD,IAAK,MACH,OAAO/G,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,SACPqB,QAAS,eAGb,IAAK,SACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,QACPqB,QAAS,eAIb,QACE,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,OACPqB,QAAS,eAGjB,EAGA6K,EAAG,SAAU7L,EAAM8C,EAAOY,EAAUhE,GAClC,MAAMgM,EAAY1L,EAAK+H,SACjB6D,GAAkBF,EAAYhM,EAAQ2F,aAAe,GAAK,GAAK,EACrE,OAAQvC,GAEN,IAAK,IACH,OAAOlD,OAAOgM,GAEhB,IAAK,KACH,OAAOzC,EAAgByC,EAAgB9I,EAAMX,QAE/C,IAAK,KACH,OAAOuB,EAASC,cAAciI,EAAgB,CAAEnB,KAAM,QACxD,IAAK,MACH,OAAO/G,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,SACPqB,QAAS,eAGb,IAAK,SACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,QACPqB,QAAS,eAIb,QACE,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,OACPqB,QAAS,eAGjB,EAGA8K,EAAG,SAAU9L,EAAM8C,EAAOY,GACxB,MAAMgI,EAAY1L,EAAK+H,SACjBgE,EAA6B,IAAdL,EAAkB,EAAIA,EAC3C,OAAQ5I,GAEN,IAAK,IACH,OAAOlD,OAAOmM,GAEhB,IAAK,KACH,OAAO5C,EAAgB4C,EAAcjJ,EAAMX,QAE7C,IAAK,KACH,OAAOuB,EAASC,cAAcoI,EAAc,CAAEtB,KAAM,QAEtD,IAAK,MACH,OAAO/G,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,cACPqB,QAAS,eAGb,IAAK,QACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,SACPqB,QAAS,eAGb,IAAK,SACH,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,QACPqB,QAAS,eAIb,QACE,OAAO0C,EAASY,IAAIoH,EAAW,CAC7B/L,MAAO,OACPqB,QAAS,eAGjB,EAGA4I,EAAG,SAAU5J,EAAM8C,EAAOY,GACxB,MACMmG,EADQ7J,EAAK2G,WACgB,IAAM,EAAI,KAAO,KAEpD,OAAQ7D,GACN,IAAK,IACL,IAAK,KACH,OAAOY,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,cACPqB,QAAS,eAEb,IAAK,MACH,OAAO0C,EACJa,UAAUsF,EAAoB,CAC7BlK,MAAO,cACPqB,QAAS,eAEVgL,cACL,IAAK,QACH,OAAOtI,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,SACPqB,QAAS,eAGb,QACE,OAAO0C,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,OACPqB,QAAS,eAGjB,EAGAiL,EAAG,SAAUjM,EAAM8C,EAAOY,GACxB,MAAMwI,EAAQlM,EAAK2G,WACnB,IAAIkD,EASJ,OAPEA,EADY,KAAVqC,EAjfA,OAmfiB,IAAVA,EApfH,WAufeA,EAAQ,IAAM,EAAI,KAAO,KAGxCpJ,GACN,IAAK,IACL,IAAK,KACH,OAAOY,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,cACPqB,QAAS,eAEb,IAAK,MACH,OAAO0C,EACJa,UAAUsF,EAAoB,CAC7BlK,MAAO,cACPqB,QAAS,eAEVgL,cACL,IAAK,QACH,OAAOtI,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,SACPqB,QAAS,eAGb,QACE,OAAO0C,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,OACPqB,QAAS,eAGjB,EAGAmL,EAAG,SAAUnM,EAAM8C,EAAOY,GACxB,MAAMwI,EAAQlM,EAAK2G,WACnB,IAAIkD,EAWJ,OATEA,EADEqC,GAAS,GAthBN,UAwhBIA,GAAS,GAzhBX,YA2hBEA,GAAS,EA5hBb,UAGF,QA+hBGpJ,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOY,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,cACPqB,QAAS,eAEb,IAAK,QACH,OAAO0C,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,SACPqB,QAAS,eAGb,QACE,OAAO0C,EAASa,UAAUsF,EAAoB,CAC5ClK,MAAO,OACPqB,QAAS,eAGjB,EAGA+I,EAAG,SAAU/J,EAAM8C,EAAOY,GACxB,GAAc,OAAVZ,EAAgB,CAClB,IAAIoJ,EAAQlM,EAAK2G,WAAa,GAE9B,OADc,IAAVuF,IAAaA,EAAQ,IAClBxI,EAASC,cAAcuI,EAAO,CAAEzB,KAAM,QAC/C,CAEA,OAAOlB,EAAgBQ,EAAE/J,EAAM8C,EACjC,EAGAkH,EAAG,SAAUhK,EAAM8C,EAAOY,GACxB,MAAc,OAAVZ,EACKY,EAASC,cAAc3D,EAAK2G,WAAY,CAAE8D,KAAM,SAGlDlB,EAAgBS,EAAEhK,EAAM8C,EACjC,EAGAsJ,EAAG,SAAUpM,EAAM8C,EAAOY,GACxB,MAAMwI,EAAQlM,EAAK2G,WAAa,GAEhC,MAAc,OAAV7D,EACKY,EAASC,cAAcuI,EAAO,CAAEzB,KAAM,SAGxCtB,EAAgB+C,EAAOpJ,EAAMX,OACtC,EAGAkK,EAAG,SAAUrM,EAAM8C,EAAOY,GACxB,IAAIwI,EAAQlM,EAAK2G,WAGjB,OAFc,IAAVuF,IAAaA,EAAQ,IAEX,OAAVpJ,EACKY,EAASC,cAAcuI,EAAO,CAAEzB,KAAM,SAGxCtB,EAAgB+C,EAAOpJ,EAAMX,OACtC,EAGA8H,EAAG,SAAUjK,EAAM8C,EAAOY,GACxB,MAAc,OAAVZ,EACKY,EAASC,cAAc3D,EAAK4G,aAAc,CAAE6D,KAAM,WAGpDlB,EAAgBU,EAAEjK,EAAM8C,EACjC,EAGAoH,EAAG,SAAUlK,EAAM8C,EAAOY,GACxB,MAAc,OAAVZ,EACKY,EAASC,cAAc3D,EAAK6G,aAAc,CAAE4D,KAAM,WAGpDlB,EAAgBW,EAAElK,EAAM8C,EACjC,EAGAqH,EAAG,SAAUnK,EAAM8C,GACjB,OAAOyG,EAAgBY,EAAEnK,EAAM8C,EACjC,EAGAwJ,EAAG,SAAUtM,EAAM8C,EAAOyJ,GACxB,MAAMC,EAAiBxM,EAAKyM,oBAE5B,GAAuB,IAAnBD,EACF,MAAO,IAGT,OAAQ1J,GAEN,IAAK,IACH,OAAO4J,EAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,EAAeH,GAOxB,QACE,OAAOG,EAAeH,EAAgB,KAE5C,EAGAI,EAAG,SAAU5M,EAAM8C,EAAOyJ,GACxB,MAAMC,EAAiBxM,EAAKyM,oBAE5B,OAAQ3J,GAEN,IAAK,IACH,OAAO4J,EAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,EAAeH,GAOxB,QACE,OAAOG,EAAeH,EAAgB,KAE5C,EAGAK,EAAG,SAAU7M,EAAM8C,EAAOyJ,GACxB,MAAMC,EAAiBxM,EAAKyM,oBAE5B,OAAQ3J,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQgK,EAAoBN,EAAgB,KAGrD,QACE,MAAO,MAAQG,EAAeH,EAAgB,KAEpD,EAGAO,EAAG,SAAU/M,EAAM8C,EAAOyJ,GACxB,MAAMC,EAAiBxM,EAAKyM,oBAE5B,OAAQ3J,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQgK,EAAoBN,EAAgB,KAGrD,QACE,MAAO,MAAQG,EAAeH,EAAgB,KAEpD,EAGAQ,EAAG,SAAUhN,EAAM8C,EAAOyJ,GAExB,OAAOpD,EADW1D,KAAK6E,MAAMtK,EAAKyI,UAAY,KACZ3F,EAAMX,OAC1C,EAGA8K,EAAG,SAAUjN,EAAM8C,EAAOyJ,GAExB,OAAOpD,EADWnJ,EAAKyI,UACW3F,EAAMX,OAC1C,GAGF,SAAS2K,EAAoBI,EAAQC,EAAY,IAC/C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAY5H,KAAK4D,IAAI6D,GACrBhB,EAAQzG,KAAK6E,MAAM+C,EAAY,IAC/BC,EAAUD,EAAY,GAC5B,OAAgB,IAAZC,EACKF,EAAOxN,OAAOsM,GAEhBkB,EAAOxN,OAAOsM,GAASiB,EAAYhE,EAAgBmE,EAAS,EACrE,CAEA,SAASZ,EAAkCQ,EAAQC,GACjD,OAAID,EAAS,IAAO,GACLA,EAAS,EAAI,IAAM,KAClB/D,EAAgB1D,KAAK4D,IAAI6D,GAAU,GAAI,GAEhDP,EAAeO,EAAQC,EAChC,CAEA,SAASR,EAAeO,EAAQC,EAAY,IAC1C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAY5H,KAAK4D,IAAI6D,GAG3B,OAAOE,EAFOjE,EAAgB1D,KAAK6E,MAAM+C,EAAY,IAAK,GAEpCF,EADNhE,EAAgBkE,EAAY,GAAI,EAElD,CCvwBA,MAAME,EAAoB,CAACC,EAASzN,KAClC,OAAQyN,GACN,IAAK,IACH,OAAOzN,EAAWC,KAAK,CAAEL,MAAO,UAClC,IAAK,KACH,OAAOI,EAAWC,KAAK,CAAEL,MAAO,WAClC,IAAK,MACH,OAAOI,EAAWC,KAAK,CAAEL,MAAO,SAElC,QACE,OAAOI,EAAWC,KAAK,CAAEL,MAAO,SACpC,EAGI8N,EAAoB,CAACD,EAASzN,KAClC,OAAQyN,GACN,IAAK,IACH,OAAOzN,EAAWM,KAAK,CAAEV,MAAO,UAClC,IAAK,KACH,OAAOI,EAAWM,KAAK,CAAEV,MAAO,WAClC,IAAK,MACH,OAAOI,EAAWM,KAAK,CAAEV,MAAO,SAElC,QACE,OAAOI,EAAWM,KAAK,CAAEV,MAAO,SACpC,EAmCW+N,EAAiB,CAC5BC,EAAGF,EACHG,EAlC4B,CAACJ,EAASzN,KACtC,MAAM2B,EAAc8L,EAAQ7L,MAAM,cAAgB,GAC5CkM,EAAcnM,EAAY,GAC1BoM,EAAcpM,EAAY,GAEhC,IAAKoM,EACH,OAAOP,EAAkBC,EAASzN,GAGpC,IAAIgO,EAEJ,OAAQF,GACN,IAAK,IACHE,EAAiBhO,EAAWO,SAAS,CAAEX,MAAO,UAC9C,MACF,IAAK,KACHoO,EAAiBhO,EAAWO,SAAS,CAAEX,MAAO,WAC9C,MACF,IAAK,MACHoO,EAAiBhO,EAAWO,SAAS,CAAEX,MAAO,SAC9C,MAEF,QACEoO,EAAiBhO,EAAWO,SAAS,CAAEX,MAAO,SAIlD,OAAOoO,EACJ7K,QAAQ,WAAYqK,EAAkBM,EAAa9N,IACnDmD,QAAQ,WAAYuK,EAAkBK,EAAa/N,GAAY,GCzD9DiO,EAAmB,OACnBC,EAAkB,OAElBC,EAAc,CAAC,IAAK,KAAM,KAAM,QCiC/B,SAASC,EAAQnO,GACtB,KCLqBc,EDKTd,ECHVc,aAAiBkF,MACC,iBAAVlF,GACoC,kBAA1CnF,OAAOM,UAAUkH,SAAShH,KAAK2E,IDCE,iBAATd,GAC1B,OAAO,ECNJ,IAAgBc,EDQrB,MAAMyC,EAAQsC,EAAO7F,GACrB,OAAQoO,MAAMtK,OAAOP,GACvB,CAGA,MElBM8K,EACJ,wDAIIC,EAA6B,oCAE7BC,EAAsB,eACtBC,EAAoB,MACpBC,EAAgC,WAoYtC,SAASC,EAAmBC,GAC1B,MAAMC,EAAUD,EAAMhN,MAAM4M,GAE5B,OAAKK,EAIEA,EAAQ,GAAG1L,QAAQsL,EAAmB,KAHpCG,CAIX,CAGA,MCjbaE,EAAyBjR,IAClC,MAAMkR,EAAW,GA2BjB,OAzBAlR,EAASmR,KAAKC,ICDS,IAACC,EDEpBH,EAASI,KACL,mCAAmCF,EAAQ/Q,qEAElC+Q,EAAQG,OAAOC,kCCLRH,EDMKD,EAAQhP,KDgUlC,SAAgBA,EAAMqP,EAAW3P,GACtC,MAAM6F,EAAiBC,IACjBsC,EAASpI,GAASoI,QAAUvC,EAAeuC,QAAU,EAErDxC,EACJ5F,GAAS4F,uBACT5F,GAASoI,QAAQpI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeuC,QAAQpI,SAAS4F,uBAChC,EAEID,EACJ3F,GAAS2F,cACT3F,GAASoI,QAAQpI,SAAS2F,cAC1BE,EAAeF,cACfE,EAAeuC,QAAQpI,SAAS2F,cAChC,EAEIiK,EAAezJ,EAAO7F,GAE5B,IAAKmO,EAAQmB,GACX,MAAM,IAAIC,WAAW,sBAGvB,IAAIC,EAAQH,EACT1N,MAAM2M,GACNS,KAAKU,IACJ,MAAMC,EAAiBD,EAAU,GACjC,MAAuB,MAAnBC,GAA6C,MAAnBA,GAErBC,EADejC,EAAegC,IAChBD,EAAW3H,EAAO/H,YAElC0P,CAAS,IAEjBG,KAAK,IACLjO,MAAM0M,GACNU,KAAKU,IAEJ,GAAkB,OAAdA,EACF,MAAO,CAAEI,SAAS,EAAO/O,MAAO,KAGlC,MAAM4O,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,EACF,MAAO,CAAEG,SAAS,EAAO/O,MAAO4N,EAAmBe,IAGrD,GAAIlF,EAAWmF,GACb,MAAO,CAAEG,SAAS,EAAM/O,MAAO2O,GAGjC,GAAIC,EAAe/N,MAAM8M,GACvB,MAAM,IAAIc,WACR,iEACEG,EACA,KAIN,MAAO,CAAEG,SAAS,EAAO/O,MAAO2O,EAAW,IAI3C3H,EAAOpE,SAASoM,eAClBN,EAAQ1H,EAAOpE,SAASoM,aAAaR,EAAcE,IAGrD,MAAMO,EAAmB,CACvBzK,wBACAD,eACAyC,UAGF,OAAO0H,EACJT,KAAKiB,IACJ,IAAKA,EAAKH,QAAS,OAAOG,EAAKlP,MAE/B,MAAMgC,EAAQkN,EAAKlP,MAYnB,QATIpB,GAASuQ,6BHjZZ,SAAkCnN,GACvC,OAAOmL,EAAgB7L,KAAKU,EAC9B,CGgZUoN,CAAyBpN,KACzBpD,GAASyQ,8BHvZZ,SAAmCrN,GACxC,OAAOkL,EAAiB5L,KAAKU,EAC/B,CGsZUsN,CAA0BtN,KHhZ7B,SAAmCA,EAAOuN,EAAQ1B,GACvD,MAAM2B,EAKR,SAAiBxN,EAAOuN,EAAQ1B,GAC9B,MAAM4B,EAAuB,MAAbzN,EAAM,GAAa,QAAU,oBAC7C,MAAO,SAASA,EAAMkJ,gCAAgClJ,aAAiBuN,uBAA4BE,oBAA0B5B,kFAC/H,CARmBpS,CAAQuG,EAAOuN,EAAQ1B,GAExC,GADAzQ,QAAQsS,KAAKF,GACTpC,EAAYuC,SAAS3N,GAAQ,MAAM,IAAIyM,WAAWe,EACxD,CG8YQI,CAA0B5N,EAAOuM,EAAWzP,OAAOI,KAI9C2Q,EADWpG,EAAWzH,EAAM,KAClBwM,EAAcxM,EAAOgF,EAAOpE,SAAUqM,EAAiB,IAEzEH,KAAK,GACV,CEhaWS,CADI,IAAIrK,KAAKiJ,GACA,uJDQND,EAAQ4B,4KAKoB5B,EAAQ6B,2CAEd,IAApB7B,EAAQ8B,QACF,mCACA,oCACK9B,EAAQ/Q,0EAI/B,IAEG6Q,EAASc,KAAK,GAAE,EE3BdmB,EAAa,EACtBC,cACAC,cACAC,aACArU,gBAEAoU,EAAYpU,GAAWS,MAAK,EAAGM,eAC3BoT,EAAYG,UAAYtC,EAAsBjR,GCRpB,EAACwT,EAAUC,EAAUpP,EAAOqP,KAC1D,MAAMC,EAAeC,SAASC,iBDiBP,gBChBvB,IAAK,IAAIC,KAAQH,EACbG,EAAKC,iBDe8B,SCfFC,GAAUN,EAAOI,EAAME,IAC5D,EDcIC,CAAmB,EAAgB,EAASjU,GARzB,CAACkU,EAAMF,KACtBA,EAAMG,kBACN,MAAM9T,EAAK6T,EAAKE,QAAQ5M,MACxB8L,EAAWjT,EAAIpB,GAAWS,MAAK,KAC3ByT,EAAW,CAAEC,cAAaC,cAAaC,aAAYrU,aAAW,GACjE,GAG2D,GACnE,EEnBQoV,EAAa3Q,GAClBA,EAAOmP,SAAS,UACTnP,EACF4Q,WAAW,SAAU,uBACrBA,WAAW,WAAY,QAEzB5Q,EACF4Q,WAAW,IAAK,SAChBA,WAAW,IAAK,QAChBA,WAAW,IAAK,QAChBA,WAAW,IAAK,UCKZC,EAAaC,IACtB,IAAIC,EAAOD,EAAME,KAAKC,KAClBC,EAAWJ,EAAME,KAAKE,SAE1B,OAAQH,GACJ,IAAK,OACDnU,QAAQC,IAAI,SChBM,CAACiU,IAC3BlU,QAAQC,IAAIiU,GACZ,MAAMK,EAAQjB,SAASkB,eAAe,OAChCC,EAAU,oXAQcP,EAAME,KAAKM,ykCAyBzCH,EAAMtB,UAAYwB,EAIlB,MAAM3B,EAAcQ,SAASkB,eAAe,QACtCG,EAAgBrB,SAASkB,eAAe,cACxCI,EAActB,SAASkB,eAAe,cACtCK,EAAiBvB,SAASkB,eAAe,iBACzCM,EAAexB,SAASkB,eAAe,QACvCO,EAAkBzB,SAASkB,eAAe,aAC1CQ,EAAiB1B,SAAS2B,cAAc,aACxCC,EAAgB5B,SAAS2B,cAAc,eACvCE,EAAc7B,SAAS2B,cAAc,SACrCG,EAAc9B,SAASkB,eAAe,eAItCzB,EAAczU,EAAmB,eACjC+W,EAAa/W,EAAmB,cAChC0U,EAAa1U,EAAmB,cAIvB4V,EAAME,KAAKkB,QAMtBN,EAAeO,MAAMC,QAAU,QAC/BN,EAAcK,MAAMC,QAAU,SAJ9BR,EAAeO,MAAMC,QAAU,OAC/BN,EAAcK,MAAMC,QAAU,SAQlC,MAAM7W,EAAawV,IACXA,GACAW,EAAaS,MAAMC,QAAU,OAC7BT,EAAgBQ,MAAMC,QAAU,SAChCb,EAAcc,UAAW,IAEzBX,EAAaS,MAAMC,QAAU,OAC7BT,EAAgBQ,MAAMC,QAAU,OAChCb,EAAcc,UAAW,EAC7B,EAKEC,EAAa,KACW,KAAtBd,EAAYhS,OAAyC,KAAzBiS,EAAejS,OAC3C+R,EAAcc,UAAW,EACzBd,EAAcgB,UAAUC,IAAI,8BAE5BjB,EAAcc,UAAW,EACzBd,EAAcgB,UAAUE,OAAO,4BACnC,EAEJjB,EAAYnB,iBAAiB,QAASiC,GACtCb,EAAepB,iBAAiB,QAASiC,GAIzC7C,EAAW,CACPC,cACAC,cACAC,aACArU,cAEJgW,EAAcc,UAAW,EACzBd,EAAcgB,UAAUC,IAAI,4BAI5B,MAAME,EAAoB,KACtB,GAA0B,KAAtBlB,EAAYhS,OAAyC,KAAzBiS,EAAejS,MAC3C,OAEJ,MAAM9C,EAAOiW,KAAKC,UAAU,CACxBtD,KAAMqB,EAAUc,EAAejS,OAC/BsO,KAAM6C,EAAUa,EAAYhS,OAC5BqT,YAAY,IAEhBZ,EAAWvV,EAAMnB,GAAWS,MAAMK,IAC1BA,EAAKJ,WACLwT,EAAW,CACPC,cACAC,cACAC,aACArU,cAIJkW,EAAejS,MAAQ,GACvB+R,EAAcc,UAAW,EACzBd,EAAcgB,UAAUC,IAAI,4BAGhC,GACH,EAGLjB,EAAclB,iBAAiB,QAASqC,GAExCxC,SAASG,iBAAiB,SAAUhG,IACjB,UAAXA,EAAE/I,MAA+B,gBAAX+I,EAAE/I,MACxBoR,GACJ,IAKJX,EAAY1B,iBAAiB,SAAS,KAClCS,EAAME,KAAKC,KAAO,OAClBH,EAAME,KAAKE,SAAW,QACtBL,EAAUC,EAAK,IAKnBkB,EAAY3B,iBAAiB,SAAS,KAClCS,EAAME,KAAKC,KAAO,OAClBH,EAAME,KAAKE,SAAW,QACtBJ,EAAME,KAAKlD,KAAO,GAClBgD,EAAME,KAAK8B,SAAW,GACtBhC,EAAME,KAAKxP,MAAQ,GACnBsP,EAAME,KAAK+B,IAAM,GACjBjC,EAAME,KAAKkB,QAAS,EACpBvW,aAAaqX,WAAW,SACxBnC,EAAUC,EAAK,GAClB,EDrJOmC,CAAenC,GACf,MACJ,IAAK,OACY,iBAAbI,EEnBoB,CAACJ,IAGfZ,SAASkB,eAAe,OAYhCvB,UAXU,mtBAehB,MAAMqD,EAAYhD,SAAS2B,cAAc,gBACnCsB,EAAajD,SAAS2B,cAAc,eACpCuB,EAAgBlD,SAAS2B,cAAc,gBACvCwB,EAAcnD,SAAS2B,cAAc,iBACrCyB,EAAcpD,SAAS2B,cAAc,UAIrC0B,EAAWrY,EAAmB,YAIpCmY,EAAYhD,iBAAiB,SAAS,KAClC,GACwB,KAApB6C,EAAU1T,OACc,KAAxB4T,EAAc5T,OACO,KAArB2T,EAAW3T,MAGX,YADAxE,MAAM,0BAGV,MAAM0B,EAAOiW,KAAKC,UAAU,CACxBtB,MAAOX,EAAUwC,EAAW3T,OAC5BsO,KAAM6C,EAAUuC,EAAU1T,OAC1BsT,SAAUnC,EAAUyC,EAAc5T,SAEtC+T,EAAS7W,GAAMV,MAAMK,IACjBgX,EAAYhB,UAAW,EACV,UAAThW,EACemX,QACX,qFAGA1C,EAAME,KAAKC,KAAO,OAClBJ,EAAUC,IAEVuC,EAAYhB,UAAW,GAG3BvB,EAAME,KAAKC,KAAO,OAClBH,EAAME,KAAKM,MAAQjV,EAAKiV,MACxBR,EAAME,KAAKyC,KAAOpX,EAAKoX,KACvB3C,EAAME,KAAK8B,SAAWzW,EAAKyW,SAC3BhC,EAAME,KAAKxP,MAAQnF,EAAKmF,MACxBsP,EAAME,KAAK+B,IAAM1W,EAAK0W,IACtBjC,EAAME,KAAKkB,QAAS,EACpBpB,EAAME,KAAKC,KAAO,OAClBJ,EAAUC,GACd,GACH,IAKLwC,EAAYjD,iBAAiB,SAAS,KAClCS,EAAME,KAAKE,SAAW,QACtBL,EAAUC,EAAK,GAClB,EFxDa4C,CAAiB5C,GGpBV,CAACA,IAGRZ,SAASkB,eAAe,OAWhCvB,UAVU,+qBAchB,MAAMsD,EAAajD,SAAS2B,cAAc,eACpCuB,EAAgBlD,SAAS2B,cAAc,gBACvCwB,EAAcnD,SAAS2B,cAAc,UACrC8B,EAAqBzD,SAAS2B,cAAc,iBAI5C+B,EAAY1Y,EAAmB,aAIrCmY,EAAYhD,iBAAiB,SAAS,KAClC,GAA4B,KAAxB+C,EAAc5T,OAAqC,KAArB2T,EAAW3T,MAEzC,YADAxE,MAAM,0BAGV,MAAM0B,EAAOiW,KAAKC,UAAU,CACxBtB,MAAOX,EAAUwC,EAAW3T,OAC5BsT,SAAUnC,EAAUyC,EAAc5T,SAGtC6T,EAAYhB,UAAW,EAEvBuB,EAAUlX,GAAMV,MAAMK,IACL,UAATA,EACemX,QACX,wEAGA1C,EAAME,KAAKC,KAAO,OAClBJ,EAAUC,IAEVuC,EAAYhB,UAAW,GAG3BvB,EAAME,KAAKC,KAAO,OAClBH,EAAME,KAAKM,MAAQjV,EAAKiV,MACxBR,EAAME,KAAKlD,KAAOzR,EAAKyR,KACvBgD,EAAME,KAAK8B,SAAWzW,EAAKyW,SAC3BhC,EAAME,KAAKxP,MAAQnF,EAAKmF,MACxBsP,EAAME,KAAK+B,IAAM1W,EAAK0W,IACtBjC,EAAME,KAAKkB,QAAS,EACpBpB,EAAME,KAAKC,KAAO,OAClBtV,aAAakY,QAAQ,QAASxX,EAAKmF,OACnCqP,EAAUC,GACd,GACH,IAKL6C,EAAmBtD,iBAAiB,SAAS,KACzCS,EAAME,KAAKE,SAAW,eACtBL,EAAUC,EAAK,GAClB,EHnDagD,CAAUhD,GAIxB,EAIJD,EA9Bc,CACVG,KAAM,CACFC,KAAM,OACNiB,QAAQ,EACRhB,SAAU,U","sources":["webpack://memo/webpack/bootstrap","webpack://memo/webpack/runtime/define property getters","webpack://memo/webpack/runtime/hasOwnProperty shorthand","webpack://memo/./scripts/errorHandle.js","webpack://memo/./api/apiModule.js","webpack://memo/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://memo/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://memo/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://memo/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://memo/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://memo/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://memo/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://memo/./node_modules/date-fns/locale/en-US.mjs","webpack://memo/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://memo/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://memo/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://memo/./node_modules/date-fns/constants.mjs","webpack://memo/./node_modules/date-fns/toDate.mjs","webpack://memo/./node_modules/date-fns/startOfDay.mjs","webpack://memo/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://memo/./node_modules/date-fns/constructFrom.mjs","webpack://memo/./node_modules/date-fns/getDayOfYear.mjs","webpack://memo/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://memo/./node_modules/date-fns/startOfYear.mjs","webpack://memo/./node_modules/date-fns/startOfWeek.mjs","webpack://memo/./node_modules/date-fns/startOfISOWeek.mjs","webpack://memo/./node_modules/date-fns/getISOWeekYear.mjs","webpack://memo/./node_modules/date-fns/getISOWeek.mjs","webpack://memo/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://memo/./node_modules/date-fns/getWeekYear.mjs","webpack://memo/./node_modules/date-fns/getWeek.mjs","webpack://memo/./node_modules/date-fns/startOfWeekYear.mjs","webpack://memo/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://memo/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://memo/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://memo/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://memo/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://memo/./node_modules/date-fns/isValid.mjs","webpack://memo/./node_modules/date-fns/isDate.mjs","webpack://memo/./node_modules/date-fns/format.mjs","webpack://memo/./components/mainPageContent.js","webpack://memo/./scripts/prepareDate.js","webpack://memo/./scripts/render.js","webpack://memo/./scripts/initEventListeners.js","webpack://memo/./scripts/safeInput.js","webpack://memo/./app.js","webpack://memo/./components/index.js","webpack://memo/./components/registrationPage.js","webpack://memo/./components/loginPage.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const errorHandling = (error) => {\n    alert(error.message)\n}\n","import { errorHandling } from '../scripts/errorHandle.js'\n\nexport const createApiEndpoints = (endpoint) => {\n    //---------------------------------- АПИ С АВТОРИЗАЦИЕЙ-------------------------\n\n    let url = `https://wedev-api.sky.pro/api/v2/marat-rizatdinov1/comments`\n\n    //-------------------------------- АПИ БЕЗ АВТОРИЗАЦИИ----------------------------\n\n    // let url = `https://wedev-api.sky.pro/api/v1/marat-rizatdinov3/comments`;\n\n    //--------------------------------  АПИ АВТОРИЗАЦИИ-------------------------------\n\n    let loginurl = 'https://wedev-api.sky.pro/api/user'\n\n    //--------------------------------ТОКЕН ИЗ ЛОКАЛСТОРАДЖА------------------------\n\n    // const storageHeader = new Headers({\n    //   Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    // });\n\n    // const stateHeader = new Headers({\n    //   Authorization: `Bearer ${state.init.token}`,\n    // });\n\n    switch (endpoint) {\n        //----------------------------------------------------------------\n\n        case 'getComments':\n            return function tryGet(isLoading) {\n                const stateHeader = new Headers({\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                })\n                isLoading(true)\n                return fetch(url, {\n                    method: 'GET',\n                    headers: stateHeader,\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json()\n                        } else if (response.status === 500) {\n                            throw new Error('500')\n                        } else {\n                            throw new Error('400')\n                        }\n                    })\n                    .then((data) => {\n                        const comments = data.comments\n                        return { comments }\n                    })\n                    .catch((error) => {\n                        if (error.message === '500') {\n                            return tryGet(isLoading)\n                        } else {\n                            errorHandling(error)\n                        }\n                    })\n                    .finally(() => isLoading(false))\n            }\n\n        //----------------------------------------------------------------\n\n        case 'addComment':\n            return function tryAdd(body, isLoading) {\n                const stateHeader = new Headers({\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                })\n                isLoading(true)\n                return fetch(url, {\n                    method: 'POST',\n                    headers: stateHeader,\n                    body,\n                })\n                    .then((response) => {\n                        if (response.status === 201) {\n                            return response.json()\n                        } else if (response.status === 500) {\n                            throw new Error('500')\n                        } else {\n                            throw new Error(\n                                'Комментарий должен быть не короче 3 символов',\n                            )\n                        }\n                    })\n                    .then((response) => {\n                        return { response }\n                    })\n                    .catch((error) => {\n                        if (error.message === '500') {\n                            return tryAdd(body, isLoading)\n                        } else {\n                            isLoading(false)\n                            errorHandling(error)\n                            return { error }\n                        }\n                    })\n            }\n        //---------------------------------------------------------------------\n\n        case 'toggleLike':\n            return function (id, isLoading) {\n                const stateHeader = new Headers({\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                })\n                isLoading(true)\n\n                return fetch(url + `/${id}/toggle-like`, {\n                    method: 'POST',\n                    headers: stateHeader,\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json()\n                        } else if (response.status === 500) {\n                            throw new Error('500')\n                        } else {\n                            throw new Error('400')\n                        }\n                    })\n                    .then((response) => {\n                        return { response }\n                    })\n                    .catch((error) => {\n                        isLoading(false)\n                        errorHandling(error)\n                    })\n            }\n\n        //---------------------------------------------------------------------\n\n        case 'getUsers':\n            return () => {\n                return fetch(loginurl)\n                    .then((response) => {\n                        return response.json()\n                    })\n                    .then((data) => {\n                        console.log(data)\n                    })\n            }\n\n        // -----------------------------------------------------------------------\n\n        case 'authUser':\n            return (body) => {\n                return fetch(loginurl, {\n                    method: 'POST',\n                    body,\n                })\n                    .then((response) => {\n                        if (response.status === 400) {\n                            throw new Error(\n                                'Пользователь с таким логином уже существует',\n                            )\n                        }\n                        return response.json()\n                    })\n                    .then((data) => {\n                        return data\n                    })\n                    .catch((error) => {\n                        errorHandling(error)\n                        return 'error'\n                    })\n            }\n\n        // -----------------------------------------------------------------------\n\n        case 'loginUser':\n            return (body) => {\n                return fetch(loginurl + '/login', {\n                    method: 'POST',\n                    body,\n                })\n                    .then((response) => {\n                        if (response.status === 400) {\n                            throw new Error('Неправильный логин или пароль!')\n                        }\n                        return response.json()\n                    })\n                    .then((data) => {\n                        return data.user\n                    })\n                    .catch((error) => {\n                        errorHandling(error)\n                        return 'error'\n                    })\n            }\n        // -----------------------------------------------------------------------\n\n        default:\n            break\n    }\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { prepareDate } from '../scripts/prepareDate.js'\n\nexport const createMainPageContent = (comments) => {\n    const listHtml = []\n\n    comments.map((comment) => {\n        listHtml.push(\n            `<li class=\"comment\" data-index =${comment.id}>\n            <div class=\"comment-header\">\n              <div>${comment.author.name}</div>\n              <div>${prepareDate(comment.date)}</div>\n            </div>\n            <div class=\"comment-body\">\n              <div class=\"comment-text\">\n                ${comment.text}\n              </div>\n            </div>\n            <div class=\"comment-footer\">\n              <div class=\"likes\">\n                <span class=\"likes-counter\">${comment.likes}</span>\n                <button  ${\n                    comment.isLiked === true\n                        ? 'class=\"like-button -active-like\"'\n                        : 'class=\"like-button\"'\n                } data-index=${comment.id}></button>\n              </div>\n            </div>\n          </li>`,\n        )\n    })\n    return listHtml.join('')\n}\n","//-------------------Обработка даты в требуемый формат------------------\n\nimport { format } from 'date-fns'\n\nexport const prepareDate = (str) => {\n    let date = new Date(str)\n    return format(date, 'dd.MM.yyyy hh:mm:ss') // 26.03.2023 10:33:41\n}\n","import { initEventListeners } from './initEventListeners.js'\nimport { createMainPageContent } from '../components/mainPageContent.js'\n\nexport const renderList = ({\n    listElement,\n    getComments,\n    toggleLike,\n    isLoading,\n}) => {\n    getComments(isLoading).then(({ comments }) => {\n        listElement.innerHTML = createMainPageContent(comments)\n\n        const likeAction = (elem, event) => {\n            event.stopPropagation()\n            const id = elem.dataset.index\n            toggleLike(id, isLoading).then(() => {\n                renderList({ listElement, getComments, toggleLike, isLoading })\n            })\n        }\n\n        initEventListeners('.like-button', 'click', comments, likeAction)\n    })\n}\n","// -------------Функция для подключения листенеров в списке------------------------\n\nexport const initEventListeners = (selector, listener, array, action) => {\n    const listElements = document.querySelectorAll(selector)\n    for (let item of listElements) {\n        item.addEventListener(listener, (event) => action(item, event, array))\n    }\n}\n","//-----------------Функционал защиты инпута--------------------------------------------\n\nexport const safeInput = (string) => {\n    if (string.includes('&nbsp;')) {\n        return string\n            .replaceAll('&nbsp;', '<p class=\"fidback\">')\n            .replaceAll('&thinsp;', '</p>')\n    }\n    return string\n        .replaceAll('&', '&amp;')\n        .replaceAll('<', '&lt;')\n        .replaceAll('>', '&gt;')\n        .replaceAll('\"', '&quot;')\n}\n","import { renderMainPage } from './components/index.js'\nimport { registrationPage } from './components/registrationPage.js'\nimport { loginPage } from './components/loginPage.js'\nimport './styles/styles.css'\n\n// ------------------НАЧАЛЬНЫЕ ДАННЫЕ-------------------\n\nconst state = {\n    init: {\n        page: 'auth',\n        isAuth: false,\n        authMode: 'login',\n    },\n}\n\n//----------------------РОУТЕР Ghb----------------------------\n\nexport const appRouter = (state) => {\n    let flag = state.init.page\n    let authMode = state.init.authMode\n\n    switch (flag) {\n        case 'main':\n            console.log('first')\n            renderMainPage(state)\n            break\n        case 'auth':\n            authMode === 'registration'\n                ? registrationPage(state)\n                : loginPage(state)\n            break\n        default:\n            break\n    }\n}\n//------------------Запуск приложения------------------\n\nappRouter(state)\n","import { createApiEndpoints } from '../api/apiModule.js'\nimport { renderList } from '../scripts/render.js'\nimport { safeInput } from '../scripts/safeInput.js'\nimport { appRouter } from '../app.js'\n\n// ----------------------Статичная разметка страницы----------------------------------------\n\nexport const renderMainPage = (state) => {\n    console.log(state)\n    const appEl = document.getElementById('app')\n    const appHtml = `<div class=\"container\">\n                  <ul class=\"comments\" id=\"list\"></ul>\n                  <div class=\"add-form\">\n                    <div id=\"load\" class=\"add-form-load\">\n                      <input\n                        type=\"text\"\n                        class=\"add-form-name\"\n                        id=\"name-input\"\n                        value =\"${state.init.login}\"\n                        disabled\n                        placeholder=\"Введите ваше имя\"\n                      />\n                      <textarea\n                        type=\"textarea\"\n                        class=\"add-form-text\"\n                        id=\"comment-input\"\n                        placeholder=\"Введите ваш коментарий\"\n                        rows=\"4\"\n                      ></textarea>\n                      <div class=\"add-form-row\">\n                        <button class=\"add-form-button add-form-button-deactive\" id=\"add-button\" disbled >Написать</button>\n                        <button class=\"exit-form-button\" id=\"exit-button\">Выйти</button>\n                      </div>\n                    </div>\n                    <span id=\"load-text\" class=\"load-comment\"\n                      >Комментарий загружается...</span\n                    >\n                  </div>\n                  <div class=\"is-auth-no\">\n                    Чтобы добавить комментарий <span class =\"link\">авторизуйтесь</span>\n                  </div>\n                </div>`\n\n    appEl.innerHTML = appHtml\n\n    //-----------------------ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ-------------------------------------\n\n    const listElement = document.getElementById('list')\n    const buttonElement = document.getElementById('add-button')\n    const nameElement = document.getElementById('name-input')\n    const commentElement = document.getElementById('comment-input')\n    const loadingField = document.getElementById('load')\n    const loadTextElement = document.getElementById('load-text')\n    const addFormElement = document.querySelector('.add-form')\n    const unAuthElement = document.querySelector('.is-auth-no')\n    const linkElement = document.querySelector('.link')\n    const exitElement = document.getElementById('exit-button')\n\n    // ----------------Подключаем АПИ Функционал------------------------------------------\n\n    const getComments = createApiEndpoints('getComments', state)\n    const addComment = createApiEndpoints('addComment', state)\n    const toggleLike = createApiEndpoints('toggleLike', state)\n\n    //---------------Отрисовка страницы в зависимости от состояния авторизации------------\n\n    const isAuth = state.init.isAuth\n\n    if (!isAuth) {\n        addFormElement.style.display = 'none'\n        unAuthElement.style.display = 'block'\n    } else {\n        addFormElement.style.display = 'block'\n        unAuthElement.style.display = 'none'\n    }\n\n    //---------------- Функционал Лоадинга страницы -------------------------------------\n\n    const isLoading = (flag) => {\n        if (flag) {\n            loadingField.style.display = 'none'\n            loadTextElement.style.display = 'inline'\n            buttonElement.disabled = true\n        } else {\n            loadingField.style.display = 'flex'\n            loadTextElement.style.display = 'none'\n            buttonElement.disabled = false\n        }\n    }\n\n    //-----------------Функционал Валидации Инпута на заполненность------------------------\n\n    const validateFn = () => {\n        if (nameElement.value === '' || commentElement.value === '') {\n            buttonElement.disabled = true\n            buttonElement.classList.add('add-form-button-deactive')\n        } else {\n            buttonElement.disabled = false\n            buttonElement.classList.remove('add-form-button-deactive')\n        }\n    }\n    nameElement.addEventListener('input', validateFn)\n    commentElement.addEventListener('input', validateFn)\n\n    //-----------------Первичный рендер----------------\n\n    renderList({\n        listElement,\n        getComments,\n        toggleLike,\n        isLoading,\n    })\n    buttonElement.disabled = true\n    buttonElement.classList.add('add-form-button-deactive')\n\n    //----------------Обрабочик клика отправки комментария ( плюс отправка при нажатии Enter)\n\n    const addCommentOnEvent = () => {\n        if (nameElement.value === '' || commentElement.value === '') {\n            return\n        }\n        const body = JSON.stringify({\n            text: safeInput(commentElement.value),\n            name: safeInput(nameElement.value),\n            forceError: true,\n        })\n        addComment(body, isLoading).then((data) => {\n            if (data.response) {\n                renderList({\n                    listElement,\n                    getComments,\n                    toggleLike,\n                    isLoading,\n                })\n\n                // nameElement.value = \"\";\n                commentElement.value = ''\n                buttonElement.disabled = true\n                buttonElement.classList.add('add-form-button-deactive')\n            } else {\n                return\n            }\n        })\n    }\n\n    buttonElement.addEventListener('click', addCommentOnEvent)\n\n    document.addEventListener('keyup', (e) => {\n        if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n            addCommentOnEvent()\n        }\n    })\n\n    //---------------Обработчик перехода на страницу Логина---------------------------\n\n    linkElement.addEventListener('click', () => {\n        state.init.page = 'auth'\n        state.init.authMode = 'login'\n        appRouter(state)\n    })\n\n    //---------------Обработчик кнопки выхода ---------------------------\n\n    exitElement.addEventListener('click', () => {\n        state.init.page = 'auth'\n        state.init.authMode = 'login'\n        state.init.name = ''\n        state.init.password = ''\n        state.init.token = ''\n        state.init._id = ''\n        state.init.isAuth = false\n        localStorage.removeItem('token')\n        appRouter(state)\n    })\n}\n","// --------------------------------------------------------------------------------------\n// --------------------------------<< СТРАНИЦА РЕГИСТРАЦИИ >>----------------------------\n// --------------------------------------------------------------------------------------\n\nimport { safeInput } from '../scripts/safeInput.js'\nimport { createApiEndpoints } from '../api/apiModule.js'\nimport { appRouter } from '../app.js'\n\nexport const registrationPage = (state) => {\n    // ---------------------Статичная разметка-----------------------------------------\n\n    const appEl = document.getElementById('app')\n    const appHtml = `<div class=\"containera container__auth\">        \n                        <div class=\"auth__form\">\n                            <h2 class=\"field__title\">Форма регистрации</h2>\n                            <input type=\"text\" class=\"name__field\" placeholder=\"Имя\">\n                            <input type=\"text\" class=\"log__field\" placeholder=\"Логин\">\n                            <input type=\"text\" class=\"pass__field\" placeholder=\"Пароль\">\n                            <button class=\"button__field registration\">Зарегистрироваться</button>          \n                            <button class=\"button__field button__field__link login\">Войти</button>          \n                        </div>\n                    </div>`\n\n    appEl.innerHTML = appHtml\n\n    //-------------------------Переменные-------------------------------------------\n\n    const nameField = document.querySelector('.name__field')\n    const loginField = document.querySelector('.log__field')\n    const passwordField = document.querySelector('.pass__field')\n    const buttonField = document.querySelector('.registration')\n    const loginButton = document.querySelector('.login')\n\n    //-----------------Создаем функционал для работы с АПИ---------------------------\n\n    const authUser = createApiEndpoints('authUser')\n\n    //----------------Обрабочик клика отправки комментария---------------------------\n\n    buttonField.addEventListener('click', () => {\n        if (\n            nameField.value === '' ||\n            passwordField.value === '' ||\n            loginField.value === ''\n        ) {\n            alert('Не все поля заполнены!')\n            return\n        }\n        const body = JSON.stringify({\n            login: safeInput(loginField.value),\n            name: safeInput(nameField.value),\n            password: safeInput(passwordField.value),\n        })\n        authUser(body).then((data) => {\n            buttonField.disabled = true\n            if (data === 'error') {\n                const answer = confirm(\n                    'К сожалению зарегистрироваться не удалось. \\n Хотите продолжить без авторизации?',\n                )\n                if (answer) {\n                    state.init.page = 'main'\n                    appRouter(state)\n                } else {\n                    buttonField.disabled = false\n                }\n            } else {\n                state.init.page = 'main'\n                state.init.login = data.login\n                state.init.main = data.main\n                state.init.password = data.password\n                state.init.token = data.token\n                state.init._id = data._id\n                state.init.isAuth = true\n                state.init.page = 'main'\n                appRouter(state)\n            }\n        })\n    })\n\n    //---------------Обработчик перехода на страницу Логина---------------------------\n\n    loginButton.addEventListener('click', () => {\n        state.init.authMode = 'login'\n        appRouter(state)\n    })\n}\n","// --------------------------------------------------------------------------------------\n// --------------------------------<< СТРАНИЦА АВТОРИЗАЦИИ >>----------------------------\n// --------------------------------------------------------------------------------------\n\nimport { safeInput } from '../scripts/safeInput.js'\nimport { createApiEndpoints } from '../api/apiModule.js'\nimport { appRouter } from '../app.js'\n\nexport const loginPage = (state) => {\n    // ---------------------Статичная разметка-----------------------------------------\n\n    const appEl = document.getElementById('app')\n    const appHtml = `<div class=\"containera container__auth\">        \n                        <div class=\"auth__form\">\n                            <h2 class=\"field__title\">Форма логина</h2>                            \n                            <input type=\"text\" class=\"log__field\" placeholder=\"Логин\" value =\"Марат Р\">\n                            <input type=\"text\" class=\"pass__field\" placeholder=\"Пароль\" value =\"123456\">\n                            <button class=\"button__field login\">Войти</button>          \n                            <button class=\"button__field button__field__link registration\">К регистрации</button>          \n                        </div>\n                    </div>`\n\n    appEl.innerHTML = appHtml\n\n    //-------------------------Переменные-------------------------------------------\n\n    const loginField = document.querySelector('.log__field')\n    const passwordField = document.querySelector('.pass__field')\n    const buttonField = document.querySelector('.login')\n    const registrationButton = document.querySelector('.registration')\n\n    //-----------------Создаем функционал для работы с АПИ---------------------------\n\n    const loginUser = createApiEndpoints('loginUser')\n\n    //----------------Обрабочик клика отправки данных\n\n    buttonField.addEventListener('click', () => {\n        if (passwordField.value === '' || loginField.value === '') {\n            alert('Не все поля заполнены!')\n            return\n        }\n        const body = JSON.stringify({\n            login: safeInput(loginField.value),\n            password: safeInput(passwordField.value),\n        })\n\n        buttonField.disabled = true\n\n        loginUser(body).then((data) => {\n            if (data === 'error') {\n                const answer = confirm(\n                    'К сожалению войти не удалось. \\n Хотите продолжить без авторизации?',\n                )\n                if (answer) {\n                    state.init.page = 'main'\n                    appRouter(state)\n                } else {\n                    buttonField.disabled = false\n                }\n            } else {\n                state.init.page = 'main'\n                state.init.login = data.login\n                state.init.name = data.name\n                state.init.password = data.password\n                state.init.token = data.token\n                state.init._id = data._id\n                state.init.isAuth = true\n                state.init.page = 'main'\n                localStorage.setItem('token', data.token)\n                appRouter(state)\n            }\n        })\n    })\n\n    //----------------Обработчик перехода на страницу Регистрации\n\n    registrationButton.addEventListener('click', () => {\n        state.init.authMode = 'registration'\n        appRouter(state)\n    })\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","errorHandling","error","alert","message","createApiEndpoints","endpoint","url","loginurl","tryGet","isLoading","stateHeader","Headers","Authorization","localStorage","getItem","fetch","method","headers","then","response","status","json","Error","data","comments","catch","finally","tryAdd","body","id","console","log","user","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","length","test","findIndex","object","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","matched","createMainPageContent","listHtml","map","comment","str","push","author","name","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","format","_message","subject","warn","includes","warnOrThrowProtectedError","formatter","text","likes","isLiked","renderList","listElement","getComments","toggleLike","innerHTML","selector","listener","action","listElements","document","querySelectorAll","item","addEventListener","event","initEventListeners","elem","stopPropagation","dataset","safeInput","replaceAll","appRouter","state","flag","init","page","authMode","appEl","getElementById","appHtml","login","buttonElement","nameElement","commentElement","loadingField","loadTextElement","addFormElement","querySelector","unAuthElement","linkElement","exitElement","addComment","isAuth","style","display","disabled","validateFn","classList","add","remove","addCommentOnEvent","JSON","stringify","forceError","password","_id","removeItem","renderMainPage","nameField","loginField","passwordField","buttonField","loginButton","authUser","confirm","main","registrationPage","registrationButton","loginUser","setItem","loginPage"],"sourceRoot":""}